{
    "swagger": "2.0",
    "info": {
        "description": "This is HireMeMaybe API service that provide data for HireMeMaybe web app",
        "title": "HireMeMaybe API service",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/auth/google/callback": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Retrieves a query parameter named \"code\" from the request and returns it in a JSON response",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication code from google",
                        "name": "Code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.code"
                        }
                    }
                }
            }
        },
        "/auth/google/company": {
            "post": {
                "description": "Checks and creates user in the database, generates an access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Handles Google login authentication for company role, exchanges code for user",
                "parameters": [
                    {
                        "description": "Authentication code from google",
                        "name": "Code",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login success",
                        "schema": {
                            "$ref": "#/definitions/auth.companyResponse"
                        }
                    },
                    "201": {
                        "description": "Register success",
                        "schema": {
                            "$ref": "#/definitions/auth.companyResponse"
                        }
                    },
                    "400": {
                        "description": "Fail to receive token or fetch user info",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/google/cpsk": {
            "post": {
                "description": "Checks and creates user in the database, generates an access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Handles Google login authentication for cpsk role, exchanges code for user",
                "parameters": [
                    {
                        "description": "Authentication code from google",
                        "name": "Code",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login success",
                        "schema": {
                            "$ref": "#/definitions/auth.cpskResponse"
                        }
                    },
                    "201": {
                        "description": "Register success",
                        "schema": {
                            "$ref": "#/definitions/auth.cpskResponse"
                        }
                    },
                    "400": {
                        "description": "Fail to receive token or fetch user info",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Username must exist and password match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Handles local login by receiving username and password",
                "parameters": [
                    {
                        "description": "Credentials for login",
                        "name": "Info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.loginInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If role is cpsk",
                        "schema": {
                            "$ref": "#/definitions/auth.cpskResponse"
                        }
                    },
                    "400": {
                        "description": "Info provided not met the condition",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Username not exist or password incorrect",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Database or password hashing error",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Username must not already exist and password must longer or equal to 8 characters long",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Handles local registration by receiving username and password",
                "parameters": [
                    {
                        "description": "role can be only 'cpsk' or 'company'",
                        "name": "Info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.registerInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "If role is cpsk",
                        "schema": {
                            "$ref": "#/definitions/auth.cpskResponse"
                        }
                    },
                    "400": {
                        "description": "Info provided not met the condition",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Database or password hashing error",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/myprofile": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Retrieve company profile from database",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cyour access token\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieve company profile",
                        "schema": {
                            "$ref": "#/definitions/model.Company"
                        }
                    },
                    "400": {
                        "description": "Invalid authorization header",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/profile": {
            "put": {
                "description": "Overwrite company profile and save into database\nSensitive field like id, file, verified status, and job post can't be overwritten",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Edit company profile",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cyour access token\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Company info to be written",
                        "name": "company_profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.EditableCompanyInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully overwrite",
                        "schema": {
                            "$ref": "#/definitions/model.Company"
                        }
                    },
                    "400": {
                        "description": "Invalid authorization header or request body",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/profile/{company_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Retrieve company profile from database by given ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cyour access token\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of company",
                        "name": "company_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieve company profile",
                        "schema": {
                            "$ref": "#/definitions/model.Company"
                        }
                    },
                    "400": {
                        "description": "Invalid authorization header\"S",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Company not exist",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/{company_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Retrieve company profile from database by given ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cyour access token\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of company",
                        "name": "company_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieve company profile",
                        "schema": {
                            "$ref": "#/definitions/model.Company"
                        }
                    },
                    "400": {
                        "description": "Invalid authorization header\"S",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Company not exist",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/cpsk/profile/resume": {
            "post": {
                "description": "Only file that smaller than 10 MB with .pdf extension is permitted",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Upload resume file",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cyour access token\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Upload your resume file",
                        "name": "resume",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully upload resume",
                        "schema": {
                            "$ref": "#/definitions/model.CPSKUser"
                        }
                    },
                    "400": {
                        "description": "Invalid authorization header",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "413": {
                        "description": "File size is larger than 10 MB",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "415": {
                        "description": "File extension is not allowed",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "schema": {
                            "$ref": "#/definitions/utilities.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.code": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "auth.companyResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.Company"
                }
            }
        },
        "auth.cpskResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.CPSKUser"
                }
            }
        },
        "auth.loginInfo": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "auth.registerInfo": {
            "type": "object",
            "required": [
                "password",
                "role",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "cpsk",
                        "company"
                    ]
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "model.Application": {
            "type": "object",
            "required": [
                "post_id",
                "resume_id"
            ],
            "properties": {
                "answer": {
                    "$ref": "#/definitions/model.ApplicationAnswer"
                },
                "answer_id": {
                    "type": "integer"
                },
                "applied_at": {
                    "type": "string"
                },
                "cpsk_id": {
                    "description": "CPSKID references CPSKUser.UserID (uuid)",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "post_id": {
                    "description": "PostID references JobPost.ID",
                    "type": "integer"
                },
                "resume_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.ApplicationAnswer": {
            "type": "object",
            "properties": {
                "expected_salary": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "programming_languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "right_to_work": {
                    "type": "string"
                },
                "year_of_experience": {
                    "type": "integer"
                }
            }
        },
        "model.CPSKUser": {
            "type": "object",
            "properties": {
                "applications": {
                    "description": "List of job applications made by the CPSK user",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Application"
                    }
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "program": {
                    "type": "string"
                },
                "resume_id": {
                    "type": "integer"
                },
                "soft_skill": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "year": {
                    "type": "string"
                }
            }
        },
        "model.Company": {
            "type": "object",
            "properties": {
                "banner_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "job_post": {
                    "description": "JobPost holds the company's job posts",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JobPost"
                    }
                },
                "logo_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "overview": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.User"
                },
                "verified_status": {
                    "type": "string"
                }
            }
        },
        "model.EditableCompanyInfo": {
            "type": "object",
            "properties": {
                "industry": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "overview": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "model.JobPost": {
            "type": "object",
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Application"
                    }
                },
                "company_id": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "exp_lvl": {
                    "type": "string"
                },
                "expiring": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "post_time": {
                    "type": "string"
                },
                "req": {
                    "type": "string"
                },
                "salary": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                },
                "tel": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "utilities.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}