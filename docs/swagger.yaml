basePath: /api/v1
definitions:
  auth.code:
    properties:
      code:
        type: string
    type: object
  auth.companyResponse:
    properties:
      access_token:
        type: string
      user:
        $ref: '#/definitions/model.Company'
    type: object
  auth.cpskResponse:
    properties:
      access_token:
        type: string
      user:
        $ref: '#/definitions/model.CPSKUser'
    type: object
  auth.loginInfo:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  auth.registerInfo:
    properties:
      password:
        type: string
      role:
        enum:
        - cpsk
        - company
        type: string
      username:
        type: string
    required:
    - password
    - role
    - username
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  model.Application:
    properties:
      answer:
        $ref: '#/definitions/model.ApplicationAnswer'
      answer_id:
        type: integer
      applied_at:
        type: string
      cpsk_id:
        description: CPSKID references CPSKUser.UserID (uuid)
        type: string
      id:
        type: integer
      post_id:
        description: PostID references JobPost.ID
        type: integer
      resume_id:
        type: integer
      status:
        type: string
    required:
    - post_id
    - resume_id
    type: object
  model.ApplicationAnswer:
    properties:
      expected_salary:
        type: string
      id:
        type: integer
      programming_languages:
        items:
          type: string
        type: array
      right_to_work:
        type: string
      year_of_experience:
        type: integer
    type: object
  model.CPSKUser:
    properties:
      applications:
        description: List of job applications made by the CPSK user
        items:
          $ref: '#/definitions/model.Application'
        type: array
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      program:
        type: string
      resume_id:
        type: integer
      soft_skill:
        items:
          type: string
        type: array
      user:
        $ref: '#/definitions/model.User'
      year:
        type: string
    type: object
  model.Company:
    properties:
      banner_id:
        type: integer
      id:
        type: string
      industry:
        type: string
      job_post:
        description: JobPost holds the company's job posts
        items:
          $ref: '#/definitions/model.JobPost'
        type: array
      logo_id:
        type: integer
      name:
        type: string
      overview:
        type: string
      size:
        type: string
      user:
        $ref: '#/definitions/model.User'
      verified_status:
        type: string
    type: object
  model.JobPost:
    properties:
      applications:
        items:
          $ref: '#/definitions/model.Application'
        type: array
      company_id:
        type: string
      desc:
        type: string
      exp_lvl:
        type: string
      expiring:
        type: string
      id:
        type: integer
      location:
        type: string
      post_time:
        type: string
      req:
        type: string
      salary:
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      type:
        type: string
    type: object
  model.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: string
      profile_picture:
        type: string
      tel:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  utilities.ErrorResponse:
    properties:
      error:
        type: string
    type: object
info:
  contact: {}
  description: This is HireMeMaybe API service that provide data for HireMeMaybe web
    app
  title: HireMeMaybe API service
  version: "1.0"
paths:
  /auth/google/callback:
    get:
      parameters:
      - description: Authentication code from google
        in: query
        name: Code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.code'
      summary: Retrieves a query parameter named "code" from the request and returns
        it in a JSON response
      tags:
      - Auth
  /auth/google/company:
    post:
      consumes:
      - application/json
      description: Checks and creates user in the database, generates an access token
      parameters:
      - description: Authentication code from google
        in: body
        name: Code
        required: true
        schema:
          $ref: '#/definitions/auth.code'
      produces:
      - application/json
      responses:
        "200":
          description: Login success
          schema:
            $ref: '#/definitions/auth.companyResponse'
        "201":
          description: Register success
          schema:
            $ref: '#/definitions/auth.companyResponse'
        "400":
          description: Fail to receive token or fetch user info
          schema:
            $ref: '#/definitions/utilities.ErrorResponse'
        "500":
          description: Database error
          schema:
            $ref: '#/definitions/utilities.ErrorResponse'
      summary: Handles Google login authentication for company role, exchanges code
        for user
      tags:
      - Auth
  /auth/google/cpsk:
    post:
      consumes:
      - application/json
      description: Checks and creates user in the database, generates an access token
      parameters:
      - description: Authentication code from google
        in: body
        name: Code
        required: true
        schema:
          $ref: '#/definitions/auth.code'
      produces:
      - application/json
      responses:
        "200":
          description: Login success
          schema:
            $ref: '#/definitions/auth.cpskResponse'
        "201":
          description: Register success
          schema:
            $ref: '#/definitions/auth.cpskResponse'
        "400":
          description: Fail to receive token or fetch user info
          schema:
            $ref: '#/definitions/utilities.ErrorResponse'
        "500":
          description: Database error
          schema:
            $ref: '#/definitions/utilities.ErrorResponse'
      summary: Handles Google login authentication for cpsk role, exchanges code for
        user
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Username must exist and password match
      parameters:
      - description: Credentials for login
        in: body
        name: Info
        required: true
        schema:
          $ref: '#/definitions/auth.loginInfo'
      produces:
      - application/json
      responses:
        "200":
          description: If role is cpsk
          schema:
            $ref: '#/definitions/auth.cpskResponse'
        "400":
          description: Info provided not met the condition
          schema:
            $ref: '#/definitions/utilities.ErrorResponse'
        "401":
          description: Username not exist or password incorrect
          schema:
            $ref: '#/definitions/utilities.ErrorResponse'
        "500":
          description: Database or password hashing error
          schema:
            $ref: '#/definitions/utilities.ErrorResponse'
      summary: Handles local login by receiving username and password
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Username must not already exist and password must longer or equal
        to 8 characters long
      parameters:
      - description: role can be only 'cpsk' or 'company'
        in: body
        name: Info
        required: true
        schema:
          $ref: '#/definitions/auth.registerInfo'
      produces:
      - application/json
      responses:
        "200":
          description: If role is cpsk
          schema:
            $ref: '#/definitions/auth.cpskResponse'
        "400":
          description: Info provided not met the condition
          schema:
            $ref: '#/definitions/utilities.ErrorResponse'
        "500":
          description: Database or password hashing error
          schema:
            $ref: '#/definitions/utilities.ErrorResponse'
      summary: Handles local registration by receiving username and password
      tags:
      - Auth
swagger: "2.0"
